{"version":3,"sources":["components/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css"],"names":["checkoutSummary","props","className","classes","CheckoutSummary","style","height","width","margin","Burger","ingredients","Button","btnType","clicked","cancelHandler","continueHandler","ContactOrder","state","OrderForm","name","elementType","elementConfig","type","placeholder","value","isValidation","required","isvalid","touched","phonenumber","street","PinCode","minlength","maxlength","flatNo","feature","option","displayValue","formValid","orderHandler","e","preventDefault","formData","formElementData","order","ing","price","orderData","userId","onOrderHandler","token","CheckValidation","rules","trim","length","changeHandler","event","Inputidentifier","updatedOrderForm","updateFormElement","target","setState","formElement","key","this","push","id","config","form","loader","Spinner","onSubmit","map","Input","changed","invalid","validation","disabled","Component","connect","burgerReducer","TotalPrice","loading","orderReducer","AuthReducer","dispatch","actionType","withErrorHandler","withRouter","axios","Checkout","cancelOrderHandler","history","goBack","continueOrderHandler","replace","summary","to","redirect","purchased","path","match","exact","component","ContactData","input","inputElement","inputClasses","validationError","join","onChange","label","module","exports"],"mappings":"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","file":"static/js/3.7ed7e5e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport Burger from '../Burger/Burger';\r\nimport Button from '../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\nconst checkoutSummary=(props)=>{\r\n\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>Enjoy Your Meal..!</h1>\r\n            <div style={{height:'100%',width:'300px',margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n                </div>\r\n            <Button btnType='Danger'clicked={props.cancelHandler}>CANCEL</Button>\r\n            <Button btnType='Success' clicked={props.continueHandler}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default checkoutSummary;","import React,{Component} from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport * as actionType from '../../../store/action/index';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass ContactOrder extends Component{\r\nstate={\r\n    OrderForm:{\r\n        name:{\r\n            elementType:'Input',\r\n            elementConfig:{\r\n                type:'text',\r\n                placeholder:'Your Name'\r\n            },\r\n            value:'',\r\n            isValidation:{\r\n                required:true\r\n            },\r\n            isvalid:false,\r\n            touched:false\r\n        },\r\n        phonenumber:{\r\n            elementType:'Input',\r\n            elementConfig:{\r\n                type:'text',\r\n                placeholder:'Phone Number'\r\n            },\r\n            value:'',\r\n            isValidation:{\r\n                required:true\r\n            },\r\n            isvalid:false,\r\n            touched:false\r\n        },\r\n\r\n        street:{\r\n            elementType:'Input',\r\n            elementConfig:{\r\n                type:'text',\r\n                placeholder:'Street'\r\n            },\r\n            value:'',\r\n            isValidation:{\r\n                required:true\r\n            },\r\n            isvalid:false,\r\n            touched:false\r\n        },\r\n        PinCode:{\r\n            elementType:'Input',\r\n            elementConfig:{\r\n                type:'text',\r\n                placeholder:'PinCode'\r\n            },\r\n            value:'',\r\n            isValidation:{\r\n                required:true,\r\n                minlength:5,\r\n                maxlength:5\r\n            },\r\n            isvalid:false,\r\n            touched:false\r\n        },\r\n        flatNo:{\r\n            elementType:'Input',\r\n            elementConfig:{\r\n                type:'text',\r\n                placeholder:'flatNumber'\r\n            },\r\n            value:'',\r\n            isValidation:{\r\n                required:true\r\n            },\r\n            isvalid:false,\r\n            touched:false\r\n        },\r\n          feature:{\r\n            elementType:'select',\r\n            elementConfig:{\r\n                option:[{\r\n                    value:'expensive', displayValue:'fastest'},\r\n                    {value:'cheapest', displayValue:'slow'}]\r\n            },\r\n            value:'fastest',\r\n            isValidation:{},\r\n            isvalid:true\r\n        },\r\n      \r\n    },\r\n    formValid:false\r\n}\r\n\r\norderHandler=(e)=>{\r\n    e.preventDefault();\r\n    //alert('You continue');\r\n\r\n    const  formData={};\r\n    for(let formElementData in this.state.OrderForm){\r\n        formData[formElementData]=this.state.OrderForm[formElementData].value;\r\n    }\r\n\r\n    const order={\r\n      ingredients:this.props.ing,\r\n      price:this.props.price,\r\n      orderData:formData,\r\n      userId:this.props.userId\r\n    }\r\n    this.props.onOrderHandler(order,this.props.token);\r\n\r\n}\r\n\r\n    CheckValidation=(value,rules)=>{\r\n        let isvalid=true;\r\n        if(!rules){\r\n            return isvalid;\r\n        }\r\n        if(rules.required){\r\n            isvalid=value.trim()!==''  &&isvalid;\r\n        }\r\n        if(rules.minlength){\r\n            isvalid=value.length>=5 &&isvalid;\r\n        }\r\n        if(rules.maxlength){\r\n            isvalid=value.length<=5 &&isvalid;\r\n        }\r\n\r\n       return isvalid;\r\n\r\n    }\r\n\r\nchangeHandler=(event,Inputidentifier)=>{\r\n    const updatedOrderForm={\r\n        ...this.state.OrderForm\r\n    };\r\n    const updateFormElement={\r\n        ...updatedOrderForm[Inputidentifier]\r\n    };\r\n    updateFormElement.value=event.target.value;\r\n    updateFormElement.isvalid=this.CheckValidation(updateFormElement.value,updateFormElement.isValidation);\r\n    updateFormElement.touched=true;\r\n    let formValid=true;\r\n    for(let Inputidentifier in updatedOrderForm){\r\n        formValid=updatedOrderForm[Inputidentifier].isvalid&&formValid;\r\n    }\r\n    updatedOrderForm[Inputidentifier]=updateFormElement;\r\n  \r\n        this.setState({OrderForm:updatedOrderForm,formValid:formValid});\r\n}\r\n\r\nrender(){\r\n    let formElement=[];\r\n    for(let key in this.state.OrderForm){\r\n        formElement.push({\r\n            id:key,\r\n            config:this.state.OrderForm[key]\r\n        })\r\n    }\r\n    let form=null;\r\n    if(this.props.loader){\r\n        form=<Spinner/>\r\n    }\r\n    else{\r\n        form=(\r\n            <form onSubmit={this.orderHandler}>\r\n             {formElement.map(form=>{\r\n                return( <Input\r\n                 key={form.id}\r\n                 elementType={form.config.elementType}\r\n                elementConfig={form.config.elementConfig}\r\n                value={form.config.value}\r\n               changed={(event)=>this.changeHandler(event,form.id)}\r\n               invalid={!form.config.isvalid}\r\n               validation={form.config.isValidation}\r\n               touched={form.config.touched}\r\n                />\r\n                )}\r\n             )}\r\n\r\n            <Button btnType='Success' disabled={!this.state.formValid}>Order</Button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className={classes.ContactOrder}>\r\n        <h3>Contact Information</h3>\r\n        {form}\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        ing:state.burgerReducer.ingredients,\r\n        price:state.burgerReducer.TotalPrice,\r\n        loading:state.orderReducer.loading,\r\n        token:state.AuthReducer.token,\r\n        userId:state.AuthReducer.userId\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onOrderHandler:(orderData,token)=>dispatch(actionType.purchaseBurger(orderData,token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(withRouter(ContactOrder),axios));","import React,{Component} from 'react';\r\nimport CheckoutSummary from '../../components/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from '../Checkout/ContactData/ContactData';\r\nimport { Route,Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Checkout extends Component{\r\n\r\n    cancelOrderHandler=()=>{\r\n        this.props.history.goBack();\r\n    };\r\n\r\n    continueOrderHandler=()=>{\r\n        this.props.history.replace('/checkout/contactdata');\r\n    };\r\n\r\nrender(){\r\n    let summary=<Redirect to ='/'/>\r\n    const redirect=this.props.purchased?<Redirect to='/'/>:null;\r\n    if(this.props.ing){\r\n        summary=(\r\n            <div>\r\n                {redirect}\r\n             <CheckoutSummary\r\n            cancelHandler={this.cancelOrderHandler}\r\n            continueHandler={this.continueOrderHandler}\r\n             ingredients={this.props.ing}/>\r\n             <Route path={this.props.match.path+'/contactdata'} exact component={ContactData}/>\r\n             </div>\r\n             );\r\n        }\r\n    return(\r\n        <div>\r\n            {summary}\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\n const mapStateToProps=state=>{\r\n     return{\r\n        ing:state.burgerReducer.ingredients,\r\n        purchased:state.orderReducer.purchased\r\n     }\r\n }\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input=(props)=>{\r\n\r\n    let inputElement=null;\r\n    const inputClasses=[classes.inputElement];\r\n    if(props.invalid && props.validation &&props.touched){\r\n        inputClasses.push([classes.invalid]);\r\n    }\r\n \r\n    let validationError = null;\r\n    if (props.invalid && props.touched) {\r\n        validationError = <p>Please enter a valid value!</p>;\r\n    }\r\n    switch(props.elementType){\r\n            case('input'):\r\n            inputElement=(<input className={inputClasses.join(' ')}\r\n                 {...props.elementConfig} \r\n                 value={props.value} \r\n                 onChange={props.changed}/>\r\n                 )\r\n            break;\r\n            case('textarea'):\r\n            inputElement=(<textarea className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}onChange={props.changed}/>)\r\n            break;\r\n            case('select'):\r\n            inputElement=(\r\n            <select className={inputClasses.join(' ')} \r\n                value={props.value}onChange={props.changed}>\r\n                    {props.elementConfig.option.map(option=>{\r\n                        return <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    })}\r\n                    </select>)\r\n            break;\r\n            default:\r\n            inputElement=(<input className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                 value={props.value}onChange={props.changed}\r\n                />)\r\n\r\n    }\r\n\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.label}><strong>{props.label}</strong></label>\r\n                {inputElement}\r\n                {validationError}\r\n        </div>\r\n    )\r\n}\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__ou3Y2\",\"label\":\"Input_label__2Qm4z\",\"inputElement\":\"Input_inputElement__2TCe2\",\"invalid\":\"Input_invalid__NkLW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1UBVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactOrder\":\"ContactData_ContactOrder__3ST15\",\"input\":\"ContactData_input__1Kk58\"};"],"sourceRoot":""}