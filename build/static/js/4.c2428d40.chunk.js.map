{"version":3,"sources":["containers/Authentication/Authentication.module.css","containers/Authentication/Authentication.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","Authentication","state","controls","email","elementType","elementConfig","type","placeholder","value","isValidation","required","isvalid","touched","password","minlength","maxlength","signUP","CheckValidation","rules","trim","minlength2","length","maxlength2","changeHandlers","event","controlName","updatedControl","updatedControlContain","target","isvalidation","setState","onSubmitHandler","preventDefault","props","onAuth","switchSignUpHandler","prevState","this","burgerBuilder","setAuthRedirectPath","onsetAuthRedirect","formElement","key","push","id","config","form","onSubmit","map","changed","invalid","validation","btnType","loading","errorMessage","error","style","color","fontSize","message","redirectAuth","isAuthenticated","to","setAuthRedirect","className","classes","Controls","clicked","Component","mapStateToProps","AuthReducer","token","burgerReducer","building","authRedirectPath","dispatchStateToProps","dispatch","isSignup","action","connect","input","inputElement","inputClasses","validationError","join","onChange","option","displayValue","Input","label"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,SAAW,mC,g0BCQvBC,E,2MACFC,MAAM,CACFC,SAAS,CACLC,MAAM,CACFC,YAAY,QACZC,cAAc,CACVC,KAAK,QACLC,YAAY,iBAEhBC,MAAM,GACNC,aAAa,CACTC,UAAS,GAGbC,SAAQ,EACRC,SAAQ,GAEZC,SAAS,CACLT,YAAY,QACZC,cAAc,CACVC,KAAK,WACLC,YAAY,YAEhBC,MAAM,GACNC,aAAa,CACTC,UAAS,EACTI,UAAU,EACVC,UAAU,IAEdJ,SAAQ,EACRC,SAAQ,IAIhBI,QAAO,G,EAQXC,gBAAgB,SAACT,EAAMU,GACnB,IAAIP,GAAQ,EAEZ,OAAIO,GAGDA,EAAMR,WACLC,EAAuB,KAAfH,EAAMW,QAAeR,GAE9BO,EAAME,aACLT,EAAQH,EAAMa,QAAQH,EAAMJ,WAAYH,GAEzCO,EAAMI,aACLX,EAAQH,EAAMa,QAAQH,EAAMH,WAAYJ,GAGtCA,GAZKA,G,EAgBfY,eAAe,SAACC,EAAMC,GAClB,IAAMC,EAAe,EAAD,GACb,EAAKzB,MAAMC,UAEXyB,EAAsB,EAAD,GACjBD,EAAeD,IAEtBE,EAAsBnB,MAAMgB,EAAMI,OAAOpB,MACzCmB,EAAsBhB,QAAQ,EAAKM,gBAAgBU,EAAsBnB,MAAMmB,EAAsBE,cACrGF,EAAsBf,SAAQ,EAC9Bc,EAAeD,GAAaE,EAC5B,EAAKG,SAAS,CAAC5B,SAASwB,K,EAGzBK,gBAAgB,SAACP,GACbA,EAAMQ,iBACN,EAAKC,MAAMC,OAAO,EAAKjC,MAAMC,SAASC,MAAMK,MAAM,EAAKP,MAAMC,SAASW,SAASL,MAAM,EAAKP,MAAMe,S,EAGpGmB,oBAAoB,WAChB,EAAKL,SAAS,SAAAM,GACV,MAAO,CAACpB,QAAQoB,EAAUpB,W,mFA9CjCqB,KAAKJ,MAAMK,eAAiD,MAAjCD,KAAKJ,MAAMM,qBACtCF,KAAKJ,MAAMO,sB,+BAoDd,IAAD,OACAC,EAAY,GAChB,IAAI,IAAIC,KAAOL,KAAKpC,MAAMC,SACtBuC,EAAYE,KAAK,CACbC,GAAGF,EACHG,OAAOR,KAAKpC,MAAMC,SAASwC,KAI/B,IAAII,EACJ,0BAAMC,SAAUV,KAAKN,iBACpBU,EAAYO,IAAI,SAAAF,GACT,OACA,kBAAC,IAAD,CACCJ,IAAKI,EAAKF,GACVxC,YAAa0C,EAAKD,OAAOzC,YAC1BC,cAAeyC,EAAKD,OAAOxC,cAC3BG,MAAOsC,EAAKD,OAAOrC,MACpByC,QAAS,SAACzB,GAAD,OAAS,EAAKD,eAAeC,EAAMsB,EAAKF,KACjDM,SAAUJ,EAAKD,OAAOlC,QACtBwC,WAAYL,EAAKD,OAAOpC,aACxBG,QAASkC,EAAKD,OAAOjC,YAIxB,kBAAC,IAAD,CAAQwC,QAAQ,WAAhB,WAGIf,KAAKJ,MAAMoB,UACVP,EAAK,kBAAC,IAAD,OAGT,IAAIQ,EAAa,KACdjB,KAAKJ,MAAMsB,QACVD,EAAc,uBAAGE,MAAO,CAACC,MAAM,MAAMC,SAAS,SAAUrB,KAAKJ,MAAMsB,MAAMI,UAG7E,IAAIC,EAAa,KAK1B,OAJYvB,KAAKJ,MAAM4B,kBACXD,EAAa,kBAAC,IAAD,CAAUE,GAAKzB,KAAKJ,MAAM8B,mBAI/C,yBAAKC,UAAWC,IAAQC,UACnBN,EACAN,EACD,qCACCR,EACD,kBAAC,IAAD,CAAQM,QAAQ,SAASe,QAAS9B,KAAKF,qBAAvC,aAAuEE,KAAKpC,MAAMe,OAAO,SAAS,e,GA1IjFoD,aA+IhBC,EAAgB,SAAApE,GACzB,MAAM,CACFoD,QAAQpD,EAAMqE,YAAYjB,QAC1BE,MAAMtD,EAAMqE,YAAYf,MACxBM,gBAA0C,OAA1B5D,EAAMqE,YAAYC,MAClCjC,cAAcrC,EAAMuE,cAAcC,SAClCV,gBAAgB9D,EAAMqE,YAAYI,mBAK7BC,EAAqB,SAAAC,GAClC,MAAM,CACF1C,OAAO,SAAC/B,EAAMU,EAASgE,GAAhB,OAA2BD,EAASE,IAAY3E,EAAMU,EAASgE,KACtErC,kBAAkB,kBAAIoC,EAASE,IAA2B,SAI/CC,sBAAQV,EAAgBM,EAAxBI,CAA8C/E,I,gCC1K7D,qCAqDegF,IAlDH,SAAC/C,GAET,IAAIgD,EAAa,KACXC,EAAa,CAACjB,IAAQgB,cACzBhD,EAAMiB,SAAWjB,EAAMkB,YAAalB,EAAMrB,SACzCsE,EAAavC,KAAK,CAACsB,IAAQf,UAG/B,IAAIiC,EAAkB,KAItB,OAHIlD,EAAMiB,SAAWjB,EAAMrB,UACvBuE,EAAkB,2DAEflD,EAAM7B,aACL,IAAK,QACL6E,EAAc,yCAAOjB,UAAWkB,EAAaE,KAAK,MACzCnD,EAAM5B,cADD,CAETG,MAAOyB,EAAMzB,MACb6E,SAAUpD,EAAMgB,WAErB,MACA,IAAK,WACLgC,EAAc,4CAAUjB,UAAWkB,EAAaE,KAAK,MAC7CnD,EAAM5B,cADA,CAEVG,MAAOyB,EAAMzB,MAAM6E,SAAUpD,EAAMgB,WACvC,MACA,IAAK,SACLgC,EACA,4BAAQjB,UAAWkB,EAAaE,KAAK,KACjC5E,MAAOyB,EAAMzB,MAAM6E,SAAUpD,EAAMgB,SAC9BhB,EAAM5B,cAAciF,OAAOtC,IAAI,SAAAsC,GAC5B,OAAO,4BAAQ5C,IAAK4C,EAAO9E,MAAOA,MAAO8E,EAAO9E,OAAQ8E,EAAOC,iBAG3E,MACA,QACAN,EAAc,yCAAOjB,UAAWkB,EAAaE,KAAK,MAC1CnD,EAAM5B,cADA,CAETG,MAAOyB,EAAMzB,MAAM6E,SAAUpD,EAAMgB,WAKhD,OACI,yBAAKe,UAAWC,IAAQuB,OACpB,2BAAOxB,UAAWC,IAAQwB,OAAO,gCAASxD,EAAMwD,QAC3CR,EACAE,K,mBChDjBrF,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU","file":"static/js/4.c2428d40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Authentication_Controls__1skDW\"};","import React,{Component} from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Authentication.module.css';\r\nimport * as action from '../../store/action/index';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Authentication extends Component{\r\n    state={\r\n        controls:{\r\n            email:{\r\n                elementType:'Input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'EMAIL-ADDRESS'\r\n                },\r\n                value:'',\r\n                isValidation:{\r\n                    required:true,\r\n                    \r\n                },\r\n                isvalid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                elementType:'Input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Password'\r\n                },\r\n                value:'',\r\n                isValidation:{\r\n                    required:true,\r\n                    minlength:6,\r\n                    maxlength:16\r\n                },\r\n                isvalid:false,\r\n                touched:false\r\n            },\r\n            \r\n        },\r\n        signUP:true\r\n    }\r\n    componentDidMount(){\r\n        if(!this.props.burgerBuilder &&this.props.setAuthRedirectPath!=='/'){\r\n            this.props.onsetAuthRedirect();\r\n        }\r\n    }\r\n\r\n    CheckValidation=(value,rules)=>{\r\n        let isvalid=true;\r\n\r\n        if(!rules){\r\n            return isvalid;\r\n        }\r\n        if(rules.required){\r\n            isvalid=value.trim()!==''  &&isvalid;\r\n        }\r\n        if(rules.minlength2){\r\n            isvalid=value.length>=rules.minlength &&isvalid;\r\n        }\r\n        if(rules.maxlength2){\r\n            isvalid=value.length<=rules.maxlength &&isvalid;\r\n        }\r\n\r\n       return isvalid;\r\n\r\n    }\r\n\r\n    changeHandlers=(event,controlName)=>{\r\n        const updatedControl={\r\n            ...this.state.controls\r\n        };\r\n         const updatedControlContain={\r\n                ...updatedControl[controlName]\r\n            };\r\n            updatedControlContain.value=event.target.value;\r\n            updatedControlContain.isvalid=this.CheckValidation(updatedControlContain.value,updatedControlContain.isvalidation);\r\n            updatedControlContain.touched=true;\r\n            updatedControl[controlName]=updatedControlContain;\r\n            this.setState({controls:updatedControl}); \r\n            }\r\n        \r\n           onSubmitHandler=(event)=>{\r\n               event.preventDefault();\r\n               this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.signUP);\r\n           } \r\n\r\n           switchSignUpHandler=()=>{\r\n               this.setState(prevState=>{\r\n                   return {signUP:!prevState.signUP}\r\n\r\n               }\r\n\r\n               )\r\n           }\r\n\r\nrender(){\r\n    let formElement=[];\r\n    for(let key in this.state.controls){\r\n        formElement.push({\r\n            id:key,\r\n            config:this.state.controls[key]\r\n        })\r\n    }\r\n\r\n        let form=(\r\n        <form onSubmit={this.onSubmitHandler}>\r\n        {formElement.map(form=>{\r\n                return(\r\n                <Input\r\n                 key={form.id}\r\n                 elementType={form.config.elementType}\r\n                elementConfig={form.config.elementConfig}\r\n                value={form.config.value}\r\n               changed={(event)=>this.changeHandlers(event,form.id)}\r\n               invalid={!form.config.isvalid}\r\n               validation={form.config.isValidation}\r\n               touched={form.config.touched}\r\n                />)\r\n             }\r\n             ) }\r\n            <Button btnType='Success'>SUBMIT</Button>\r\n            </form>);\r\n        \r\n             if(this.props.loading){\r\n                 form=<Spinner/>\r\n             }\r\n\r\n             let errorMessage=null;\r\n             if(this.props.error){\r\n                 errorMessage=(<p style={{color:'red',fontSize:'20px'}}>{this.props.error.message}</p>);\r\n             }\r\n\r\n             let redirectAuth=null;\r\n             if(this.props.isAuthenticated){\r\n                redirectAuth=<Redirect to ={this.props.setAuthRedirect}/>\r\n             }\r\n   \r\n    return(\r\n        <div className={classes.Controls}>\r\n            {redirectAuth}\r\n            {errorMessage}\r\n            <h2>LOGIN</h2>\r\n            {form}\r\n            <Button btnType=\"Danger\" clicked={this.switchSignUpHandler}>SWITCH TO {this.state.signUP?'SIGNIN':'SIGNUP'}</Button>\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport const mapStateToProps=state=>{\r\n    return{\r\n        loading:state.AuthReducer.loading,\r\n        error:state.AuthReducer.error,\r\n        isAuthenticated:state.AuthReducer.token!==null,\r\n        burgerBuilder:state.burgerReducer.building,\r\n        setAuthRedirect:state.AuthReducer.authRedirectPath\r\n        \r\n    }\r\n}\r\n\r\nexport const dispatchStateToProps=dispatch=>{\r\nreturn{\r\n    onAuth:(email,password,isSignup)=>dispatch(action.auth(email,password,isSignup)),\r\n    onsetAuthRedirect:()=>dispatch(action.setAuthRedirectPath('/'))\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps,dispatchStateToProps)(Authentication);","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input=(props)=>{\r\n\r\n    let inputElement=null;\r\n    const inputClasses=[classes.inputElement];\r\n    if(props.invalid && props.validation &&props.touched){\r\n        inputClasses.push([classes.invalid]);\r\n    }\r\n \r\n    let validationError = null;\r\n    if (props.invalid && props.touched) {\r\n        validationError = <p>Please enter a valid value!</p>;\r\n    }\r\n    switch(props.elementType){\r\n            case('input'):\r\n            inputElement=(<input className={inputClasses.join(' ')}\r\n                 {...props.elementConfig} \r\n                 value={props.value} \r\n                 onChange={props.changed}/>\r\n                 )\r\n            break;\r\n            case('textarea'):\r\n            inputElement=(<textarea className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}onChange={props.changed}/>)\r\n            break;\r\n            case('select'):\r\n            inputElement=(\r\n            <select className={inputClasses.join(' ')} \r\n                value={props.value}onChange={props.changed}>\r\n                    {props.elementConfig.option.map(option=>{\r\n                        return <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    })}\r\n                    </select>)\r\n            break;\r\n            default:\r\n            inputElement=(<input className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                 value={props.value}onChange={props.changed}\r\n                />)\r\n\r\n    }\r\n\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.label}><strong>{props.label}</strong></label>\r\n                {inputElement}\r\n                {validationError}\r\n        </div>\r\n    )\r\n}\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__ou3Y2\",\"label\":\"Input_label__2Qm4z\",\"inputElement\":\"Input_inputElement__2TCe2\",\"invalid\":\"Input_invalid__NkLW3\"};"],"sourceRoot":""}